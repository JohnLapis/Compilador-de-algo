#+property: header-args :tangle App.java :comments link

* imports
#+begin_src java :noweb-ref imports
package compilador;

import java.nio.file.Path;
import java.util.regex.Pattern;
import java.nio.file.Paths;
import java.io.IOException;
import java.nio.file.Files;
import java.util.regex.Matcher;
#+end_src

* number
#+begin_src java :noweb-ref Arithmetic
class Arithmetic {
    public enum Keywords = {};

    public void tokenzine(String code) {
        Pattern pattern = Pattern.compile("\\d+");
        Matcher matcher = pattern.matcher(code);
    }

    public static void main(String[] args) {
        if (args.length > 1) {
            Path path = Paths.get(args[1]);
        } else {
            System.out.println("No filename provided.");
        }
        String text;
        try {
            text = String.join("\n", Files.readAllLines(path));
        } catch (IOException e) {
            System.out.println("Error " + e.getMessage());
            e.printStackTrace();
            return;
        }

    }
}
#+end_src

#+begin_src java :noweb-ref App
public class App {
    public static void main( String[] args ) {
        System.out.println("Hello World!");
    }
}
#+end_src
** tokenizer
#+begin_src
[a-zA-Z_]
/^
(\w+ )+ # keyword in var/function declaration
 +
(IDENTIFIER) # varname
 *
(= *(?EXPR))
;$
/
#+end_src
