#+property: header-args :tangle Scanner.java :comments link

* imports
#+begin_src java :noweb-ref imports
package compilador;

import java.nio.file.Path;
import java.util.regex.Pattern;
import java.nio.file.Paths;
import java.io.IOException;
import java.nio.file.Files;
import java.util.regex.Matcher;
import java.text.ParseException;
#+end_src

* number
- Which exceptions should be thrown? Myb create a custom one
#+begin_src java :noweb-ref Arithmetic
class Scanner {
    public enum Keywords {};

    public static String[] tokenize(String code) throws ParseException  {
        Pattern pattern = Pattern.compile("\\d+");
        String matches[];
        Matcher matcher = pattern.matcher(code);
        while (matcher.find()) {
            matches.add(matcher.group());
        }
        // if (matches.length == 0) {
        //     return ParseException;
        // }
        return matches;
    }

    public static void main(String[] args) {
        // It will only accept one file.
        if (args.length != 1) {
            System.out.println("Wrong number of parameters provided.");
            return;
        }

        System.out.println(tokenize(args[0]));

        Path path = Paths.get(args[0]);
        String text;
        try {
            text = String.join("\n", Files.readAllLines(path));
        } catch (IOException e) {
            System.out.println("Error " + e.getMessage());
            e.printStackTrace();
            return;
        }

    }
}
#+end_src

** tokenizer
#+begin_src
[a-zA-Z_]
/^
(\w+ )+ # keyword in var/function declaration
 +
(IDENTIFIER) # varname
 *
(= *(?EXPR))
;$
/
#+end_src
